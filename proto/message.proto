syntax = "proto3";

package message;

option go_package = "./message";

service MessageService {
  rpc CreateMessage (RequestCreateMessage) returns (ResponseCreateMessage);
  rpc ReadMessage (RequestReadMessage) returns (ResponseReadMessage);
  rpc DecryptChannel (RequestDecryptChannel) returns (ResponseDecryptChannel);
  rpc FinishChannel (RequestFinishChannel) returns (ResponseFinishChannel);
  rpc PushMessage (RequestPushMessage) returns (ResponsePushMessage);
  rpc CreateBotMessage (RequestBotMessage) returns (ResponseBotMessage);
  rpc CreateChannel (RequestCreateChannel) returns (ResponseCreateChannel);
}

message RequestCreateMessage {
  int64 sender_id = 1;
  int64 channel_id = 2;
  string channel_type = 3;
  string text = 4;
}

message RequestReadMessage {
  int64 user_id = 1;
  int64 channel_id = 2;
  int64 message_id = 3;
}

message RequestDecryptChannel {
  int64 channel_id = 1;
}

message RequestFinishChannel {
  int64 channel_id = 1;
}

message RequestPushMessage {
  int64 sender_id = 1;
  Message message = 2;
  repeated int64 receiver_user_ids = 3;
}

message RequestBotMessage {
  int64 sender_id = 1;
  int64 channel_id = 2;
  string channel_type = 3;
  string text = 4;
}

message RequestCreateChannel {
  string name = 1;
  int64 host_user_id = 2;
  repeated int64 joined_users = 3;
}

message Message {
  int64 id = 1;
  int64 channel_id = 2;
  int64 sender_id = 3;
  string text = 4;
  string animal = 5;
  string created_time = 6;
  string updated_time = 7;
}

message ResponseCreateMessage {
  string status = 1;
  string error_message = 2;
  Message message = 3;
  repeated int64 joined_users = 4;
}

message ResponseReadMessage {
  string status = 1;
  string error_message = 2;
}

message ResponseDecryptChannel {
  string status = 1;
  string error_message = 2;
}

message ResponseFinishChannel {
  string status = 1;
  string error_message = 2;
}

message ResponsePushMessage {
  string status = 1;
  string error_message = 2;
}

message ResponseBotMessage {
  string status = 1;
  string error_message = 2;
}

message ResponseCreateChannel {
  int64 channel_id = 1;
}